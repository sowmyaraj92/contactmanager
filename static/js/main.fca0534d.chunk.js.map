{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","onShowClick","e","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fca0534d.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport axios from 'axios'\n\nconst Context = React.createContext();\n\nconst reducer =(state, action) =>{\n\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n        return {\n                ...state,\n                contacts: state.contacts.filter(\n                    contact =>contact.id !== action.payload\n                    )\n        \n            };\n            case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts : [action.payload, ...state.contacts]\n        \n            };\n            case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts : state.contacts.map(\n                    contact =>\n                    contact.id ===action.payload.id \n                    ? (contact =action.payload)\n                    : contact\n                )\n            };\n            default :\n            return state;\n    }\n    \n};\n\nexport class Provider extends Component{\n    state = {\n        contacts : [],\n            dispatch: action => this.setState (state =>\n            reducer(state,action))\n    };\nasync componentDidMount(){\n    const res = await axios\n    .get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts: res.data});\n}\n\nrender() {\n    return (\n\n        <Context.Provider value={this.state}>\n        {this.props.children}\n        </Context.Provider>\n            )\n        }\n}\nexport const Consumer = Context.Consumer;\n\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios'\n\n\n class Contact extends Component {\n   state =  {\n     showContactInfo : false\n   };\n   onDeleteClick = async (id, dispatch ) => {\n     try {\n      await axios\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      \n      \n      dispatch({type:'DELETE_CONTACT', payload  : id});\n     }\n     catch(e){\n      dispatch({type:'DELETE_CONTACT', payload  : id});\n     }\n   \n   }\n\n  onShowClick = e =>{\n     this.setState ({showContactInfo : !this.state.showContactInfo});\n  };\n    \n  render() {\n    const { id, name, email, phone } = this.props.contact; \n    const {showContactInfo} = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          \n          const {dispatch} = value;\n\n          return (\n            <div className =\"card card-body mb-3\">\n             <h4>\n                  {name} {' '}\n                  <i onClick ={this.onShowClick}\n                  className=\"fas fa-sort-down\" style ={{cursor: 'pointer' }}/>\n\n                  <i className=\"fas fa-times\" \n                  style ={{cursor :'pointer', float: 'right', color: 'red'}} \n                  onClick ={this.onDeleteClick.bind(this, id, dispatch)}>\n                  </i>\n                \n                <Link to ={`contact/edit/${id}`}>\n                <i \n                className=\"fas fa-pencil-alt\"\n                style = {{\n                  cursor :'pointer',\n                  float :'right',\n                  color:'black',\n                  marginRight : '1rem'\n                }}\n                />\n                </Link>\n            </h4>\n                  {showContactInfo ? ( <ul className = \"list-group\">\n                      <li className=\"list-group-item\">Email id :{email}</li>\n                      <li className=\"list-group-item\">Phone no : {phone}</li>\n                  </ul>) :  null}\n                \n            </div>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes ={\n      contact : PropTypes.object.isRequired,\n     \n      \n}\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {          \n  render() {\n    return(\n        <Consumer>\n            {value => {\n                const {contacts} = value;\n                return (\n                <React.Fragment>\n                    <h1 className=\"display-4 mb-2\">\n                    <span className =\"text-danger\">Contact </span>   \n                    List</h1>  \n                            {contacts.map( contact => (\n                            <Contact key ={contact.id} \n                            contact =  {contact}\n                                />\n                            ))} \n                </React.Fragment>\n                )\n            }} \n        </Consumer>\n    ) \n  }\n}\nexport default Contacts;\n\n","// Stateless functional component\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n\nconst TextInputGroup =({\n\n    label, \n    name, \n    className,\n    value, \n    type, \n    placeholder, \n    onChange,\n    error\n        }) =>{\n        return (\n                <div className=\"form-group\">\n                <label htmlFor={name}>{label}</label>\n                <input \n                type={type} \n                name ={name}\n                className ={classnames('form-control form-control-lg',\n                {'is-invalid': error})}\n                placeholder ={placeholder}\n                value ={value}\n                onChange ={onChange}\n                />\n                {error &&  <div className=\"invalid-feebback\">{error}</div>}\n               \n                </div>\n        );\n    };\n\n\nTextInputGroup.propTypes = {\n    \n    label :PropTypes.string.isRequired,\n    name :PropTypes.string.isRequired,\n    placeholder :PropTypes.string.isRequired,\n    value : PropTypes.string.isRequired,\n    type : PropTypes.string.isRequired,\n    onChange : PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired\n\n};\n\nTextInputGroup.defaultProps ={\n    type :'text'\n};\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport {Consumer} from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\n\nclass AddContact extends Component {\n state ={\n     name :'',\n     email :'',\n     phone :'',\n     errors :{}\n }\n\n onSubmit = async (dispatch, e) =>{\n     e.preventDefault();  \n     const {name, email, phone} = this.state;\n\n     if(name === ''){\n         this.setState({errors :{name :'Name is required'}});\n         return;\n     }\n     if(email === ''){\n        this.setState({errors :{email :'Email is required'}});\n        return;\n    }\n    if(phone === ''){\n        this.setState({errors :{phone :'Phone is required'}});\n        return;\n    }\n\n\n      const newContact ={\n          name,\n          email,\n          phone\n      }\n\n     const res = await axios\n     .post('https://jsonplaceholder.typicode.com/users', newContact);\n\n     dispatch ({type:'ADD_CONTACT', payload: res.data});\n     \n\n        //Clear State\n        this.setState({\n            name :'',\n            email:'',\n            phone: '',\n            errors :{}\n        });\n\n        this.props.history.push(\"/\");\n }\n onChange = (e) => this.setState({[e.target.name] :e.target.value});\n \n\n  render() {\n      const {name, email,phone, errors} = this.state;\n    return(\n        <Consumer>\n            {value => {\n                const {dispatch} = value;\n                return(\n                    <div className =\"card mb-3\">\n                    <div className=\"card-header\"> Add Contact</div>\n                    <div className=\"card-body\">\n                    <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\n           \n           <TextInputGroup \n               label =\"Name\"\n               name =\"name\"\n               placeholder =\" Enter Name\"\n               value ={name}\n               onChange ={this.onChange}\n               error = {errors.name}\n            />\n            <TextInputGroup \n               label =\"Email\"\n               name =\"email\"\n               type =\"email\"\n               placeholder =\" Enter Email\"\n               value ={email}\n               onChange ={this.onChange}\n               error ={errors.email}\n            />\n            <TextInputGroup \n               label =\"Phone\"\n               name =\"phone\"\n               placeholder =\" Enter Phone\"\n               value ={phone}\n               onChange ={this.onChange}\n               error ={errors.phone}\n            />\n\n         \n      <input type=\"submit\" value=\"Add Contact\" className =\"btn btn-light btn-block\"/>\n      \n      </form>\n      </div>\n        \n      </div>\n                )\n            \n        }}\n        </Consumer>\n    )\n  }\n}\nexport default AddContact;\n","import React, { Component } from 'react'\nimport {Consumer} from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\n\nclass EditContact extends Component {\n state ={\n     name :'',\n     email :'',\n     phone :'',\n     errors :{}\n }\n\n async componentDidMount(){\n\n    const { id } = this.props.match.params;\n     const res = await axios\n     .get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n     const contact = res.data;\n     this.setState ({\n         name : contact.name,\n         email : contact.email,\n         phone: contact.phone\n     });\n\n }\n\n onSubmit = async (dispatch, e) =>{\n     e.preventDefault();  \n     const {name, email, phone} = this.state;\n\n     if(name === ''){\n         this.setState({errors :{name :'Name is required'}});\n         return;\n     }\n     if(email === ''){\n        this.setState({errors :{email :'Email is required'}});\n        return;\n    }\n    if(phone === ''){\n        this.setState({errors :{phone :'Phone is required'}});\n        return;\n    }\n\n    const updContact = {\n        name, \n        email,\n        phone\n\n    }\n\n    const { id } = this.props.match.params;\n\n    const res= await axios\n                .put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n    dispatch({type :'UPDATE_CONTACT', payload :res.data})\n\n        //Clear State\n        this.setState({\n            name :'',\n            email:'',\n            phone: '',\n            errors :{}\n        });\n\n        this.props.history.push(\"/\");\n }\n onChange = (e) => this.setState({[e.target.name] :e.target.value});\n \n\n  render() {\n      const {name, email,phone, errors} = this.state;\n    return(\n        <Consumer>\n            {value => {\n                const {dispatch} = value;\n                return(\n                    <div className =\"card mb-3\">\n                    <div className=\"card-header\"> Edit Contact</div>\n                    <div className=\"card-body\">\n                    <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\n           \n                            <TextInputGroup \n                                label =\"Name\"\n                                name =\"name\"\n                                placeholder =\" Enter Name\"\n                                value ={name}\n                                onChange ={this.onChange}\n                                error = {errors.name}\n                                />\n                                <TextInputGroup \n                                label =\"Email\"\n                                name =\"email\"\n                                type =\"email\"\n                                placeholder =\" Enter Email\"\n                                value ={email}\n                                onChange ={this.onChange}\n                                error ={errors.email}\n                                />\n                                <TextInputGroup \n                                label =\"Phone\"\n                                name =\"phone\"\n                                placeholder =\" Enter Phone\"\n                                value ={phone}\n                                onChange ={this.onChange}\n                                error ={errors.phone}\n                                />\n\n         \n      <input type=\"submit\" value=\"Update Contact\" className =\"btn btn-light btn-block\"/>\n      \n      </form>\n      </div>\n        \n      </div>\n                )\n            \n        }}\n        </Consumer>\n    )\n  }\n}\nexport default EditContact;\n","\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n \n\nconst Header = (props) => {\n    const {branding} = props;\n    return (\n        <nav className =\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n\n        <ul className=\"navbar-nav mr-auto-right\">\n            <li className=\"nav-item\">  \n            <Link to=\"/\" className=\"nav-link\">\n            <i className=\"fas fa-home\"></i> Home\n            </Link>\n            </li>\n            <li className=\"nav-item\">  \n            <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-plus\"></i> Add\n            </Link>\n            </li>\n            <li className=\"nav-item\">  \n            <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"fas fa-question\"></i> About\n            </Link>\n            </li>\n        </ul>\n        </div>\n        </nav>\n\n    \n    );\n}\n\nHeader.defaultProps = {\n    branding :'My App'\n\n};\nHeader.propTypes = {\n    branding : PropTypes.string.isRequired\n};\n\n// const headingStyle ={\n//     color :'green', \n//     fontSize :'50px'\n// };\nexport default Header;  \n","import React from 'react'\n\nexport default () =>{\n   \n  return (\n    <div>\n      <h1 className =\"display-4\">About Contact Manager </h1>\n      <p className =\"lead\">Simple app to manage contacts</p>\n      <p className =\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"> <span className =\"text-danger\">404 </span>\n      Page Not Found!</h1>\n      <p className=\"lead\">Sorry, that page does not exist!</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\n class Test extends Component {\n     state = {\n       title : '',\n       body :''\n     };\n     componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(response => response.json())\n        .then(data => this.setState({\n            title: data.title,\n            body:data.body\n        }))     \n    }\n    //  componentWillMount(){\n    //      console.log('Component Will Mount...');\n    //  }\n    //  componentDidUpdate(){\n    //     console.log('Component Did Update...');\n    // }\n    // componentWillUpdate(){\n    //     console.log('Component Will Update...'); \n    // }\n    // componentWillReceiveProps(nextProps, nextState){\n    //     console.log('ComponentWillReceiveProps...'); \n    // }\n\n    // static getDerivedStateFromProps (nextProps, prevState){\n    //     return null;\n    // }\n    // getSnapshotBeforeUpdate (prevProps, prevState){\n    //     console.log('getSnapshotBeforeUpdate...');\n    //     return null;\n    // }\n  render() {\n      const {title, body} = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\nexport default Test;\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport Header from './components/layout/Header';\n\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport Test from './components/test/Test';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\n\nclass App extends Component {\n  render() { \n    return (\n      <Provider>\n        <Router>\n      <div className=\"App\">\n       \n        <Header branding = \"Contact Manager\"/>\n        <div className=\"container\">\n        <Switch>\n\n          <Route exact path =\"/\" component ={ Contacts } />\n\n          <Route exact path =\"/contact/add\" component ={ AddContact } />\n          <Route exact path =\"/contact/edit/:id\" component ={ EditContact } />\n\n          <Route exact path =\"/about\" component ={ About } />\n          <Route exact path =\"/test\" component ={ Test } />\n          <Route component ={ NotFound } />\n        </Switch>\n        \n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}